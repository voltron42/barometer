<!ELEMENT program ((procedure|function)*,main)>
<!ATTLIST program name CDATA #REQUIRED>
<!ELEMENT print EMPTY>
<!ATTLIST print value CDATA #REQUIRED>
<!ELEMENT main (set|print|prompt|for|for-each|while|do-while|if|try|call|break|continue|throw)+>
<!ELEMENT for (set|print|prompt|for|for-each|while|do-while|if|try|call|break|continue|throw)+>
<!ATTLIST for
    var CDATA #REQUIRED
    init CDATA #REQUIRED
    while CDATA #REQUIRED
    step CDATA #REQUIRED>
<!ELEMENT for-each (set|print|prompt|for|for-each|while|do-while|if|try|call|break|continue|throw)+>
<!ATTLIST for-each
    item CDATA #REQUIRED
    index CDATA #IMPLIED
    collection CDATA #REQUIRED>
<!ELEMENT while (set|print|prompt|for|for-each|while|do-while|if|try|call|break|continue|throw)+>
<!ATTLIST while while CDATA #REQUIRED>
<!ELEMENT do-while (set|print|prompt|for|for-each|while|do-while|if|try|call|break|continue|throw)+>
<!ATTLIST do-while while CDATA #REQUIRED>
<!ELEMENT try (do,(catch|finally|(catch,finally)))>
<!ELEMENT do (set|print|prompt|for|for-each|while|do-while|if|try|call|break|continue|throw)+>
<!ELEMENT catch (set|print|prompt|for|for-each|while|do-while|if|try|call|break|continue|throw)+>
<!ATTLIST catch error CDATA #REQUIRED>
<!ELEMENT finally (set|print|prompt|for|for-each|while|do-while|if|try|call|break|continue|throw)+>
<!ELEMENT if (then,else-if*,else?)>
<!ATTLIST if condition CDATA #REQUIRED>
<!ELEMENT then (set|print|prompt|for|for-each|while|do-while|if|try|call|break|continue|throw)+>
<!ELEMENT else-if (set|print|prompt|for|for-each|while|do-while|if|try|call|break|continue|throw)+>
<!ATTLIST else-if condition CDATA #REQUIRED>
<!ELEMENT else (set|print|prompt|for|for-each|while|do-while|if|try|call|break|continue|throw)+>
<!ELEMENT break EMPTY>
<!ELEMENT continue EMPTY>
<!ELEMENT throw (list|map|null|primitive|call-fn)>
<!ELEMENT set (list|map|null|primitive|call-fn)>
<!ATTLIST set variable CDATA #REQUIRED>
<!ELEMENT prompt EMPTY>
<!ATTLIST prompt
    variable CDATA #REQUIRED
    message CDATA #REQUIRED
    >
<!ELEMENT list (list|map|null|primitive|call-fn)*>
<!ELEMENT map (entry*)>
<!ELEMENT entry (list|map|null|primitive|call-fn)>
<!ATTLIST entry key CDATA #REQUIRED>
<!ELEMENT null EMPTY>
<!ELEMENT primitive EMPTY>
<!ATTLIST primitive
        type (string|number|boolean|file|path) #REQUIRED
        value CDATA #REQUIRED>
<!ELEMENT date EMPTY>
<!ATTLIST date
        value CDATA #REQUIRED
        format CDATA #REQUIRED>
<!ELEMENT call (arg*)>
<!ATTLIST call name CDATA #REQUIRED>
<!ELEMENT call-fn (arg*)>
<!ATTLIST call-fn name CDATA #REQUIRED>
<!ELEMENT procedure (param*,var-param?,do)>
<!ATTLIST procedure
    name CDATA #REQUIRED
    template CDATA #REQUIRED
    >
<!ELEMENT function (param*,var-param?,do,return)>
<!ATTLIST function
    name CDATA #REQUIRED
    template CDATA #REQUIRED
    >
<!ELEMENT return (list|map|null|primitive|call-fn)>
<!ELEMENT arg (list|map|null|primitive|call-fn)>
<!ATTLIST arg name CDATA #REQUIRED>
<!ELEMENT param (list|map|null|primitive|call-fn)?>
<!ATTLIST param name CDATA #REQUIRED>
<!ELEMENT var-param (list|map|null|primitive|call-fn)*>
<!ATTLIST var-param name CDATA #REQUIRED>
